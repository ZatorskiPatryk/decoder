{"version":3,"sources":["Ge.js","Morse.js","Ul.js","Cezar.js","Start.js","App.js","serviceWorker.js","index.js"],"names":["Ge","state","value","key","msg","handleChange","e","_this","setState","target","handleKeyChange","codeGe","str","Cipher","alert","length","string","split","cipher","join","i","n","_this2","this","react_default","a","createElement","Fragment","onChange","className","type","onClick","Component","Morse","toLowerCase","decode","code","Ul","number","codeFraction","allarr","j","k","decodeFraction","includes","result","push","decodeFractionBtn","d","array","alfabet","App","handleNumberChange","codeCesar","x","arr","indexOf","Start","handleOptionChange","selectValue","src_Start","Cezar","src_Morse","src_Ge","src_Ul","name","id","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b0fffa9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Ge extends Component {\r\n  state = {\r\n    value: \"\",\r\n    key: null,\r\n    msg: null,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  handleKeyChange = (e) => {\r\n    this.setState({\r\n      key: e.target.value,\r\n    });\r\n  };\r\n  codeGe = (str, Cipher) => {\r\n    if (Cipher === null || this.state.msg === null) {\r\n      return alert(\"Pole na kod jak i na wiadomośc musi być wypelnione !\");\r\n    } else {\r\n      if (Cipher.length > 25) {\r\n        return alert(\"za dlugi szyfr\");\r\n      }\r\n      if (\r\n        Cipher.length % 2 === 0 &&\r\n        Cipher.length !== 2 &&\r\n        Cipher.length !== 8 &&\r\n        Cipher.length !== 14 &&\r\n        Cipher.length !== 20\r\n      ) {\r\n        return alert(\r\n          'nieprawidlowy szyfr! pamietaj aby pary liter oddzielic \"-\"!'\r\n        );\r\n      }\r\n      let string = str.split(\"\"); //string is array of sings now;\r\n      let cipher = Cipher.split(\"-\");\r\n      cipher = cipher.join(\"\");\r\n      cipher = cipher.split(\"\"); // cipher is a array of sings now, without \"-\";\r\n      for (let i = 0; i < string.length; i++) {\r\n        for (let n = 0; n < cipher.length; n += 2) {\r\n          if (string[i] === cipher[n]) {\r\n            string[i] = cipher[n + 1];\r\n          } else if (string[i] === cipher[n + 1]) {\r\n            string[i] = cipher[n];\r\n          }\r\n        }\r\n      }\r\n      string = string.join(\"\");\r\n      this.setState({\r\n        msg: string,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Stwórz własny szyfr typu GA-DE-RY-PO-LU-KI :</h1>\r\n        <p>\r\n          Wyraz zostaje podzielony na części, w których każda składa się z dwóch\r\n          kolejnych liter np: GA - DE - RY - PO - LU - KI. Jeśli jakieś litery\r\n          występują w kluczu obok siebie - zostają zastąpione na sąsiadującą,\r\n          jeśli nie występuje - pozostaje bez zmian. Deszyfrowanie jest procesem\r\n          odwrotnym.\r\n        </p>\r\n        <p>Pzykład: Klucz GA-DE-RY-PO-LU-KI Wiadomość: Orzechy=pyzdchr </p>\r\n\r\n        <label>\r\n          Tutaj wpisz wiadomość :<br></br>\r\n          <textarea\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n            className=\"label\"\r\n          ></textarea>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Tutaj wpisz klucz do szyfru(pamiętaj, litery nie mogą się powtarzać!)\r\n          :<br></br>\r\n          <input\r\n            type=\"tekst\"\r\n            onChange={this.handleKeyChange}\r\n            className=\"label\"\r\n          />\r\n        </label>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.codeGe(this.state.value, this.state.key);\r\n          }}\r\n        >\r\n          Zakoduj/Odkoduj wiadomość !\r\n        </button>\r\n        <br />\r\n        <div className=\"solution\">\r\n          {this.state.msg ? `Rozwiązanie:` : null}\r\n          <br />\r\n          {this.state.msg ? this.state.msg : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ge;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Morse extends Component {\r\n  state = {\r\n    value: \"\",\r\n    msg: null,\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  decode(str) {\r\n    let string = str.split(\" \");\r\n    for (let i = 0; i < string.length; i++) {\r\n      switch (string[i]) {\r\n        case \".-\":\r\n          string[i] = \"a\";\r\n          break;\r\n        case \"-...\":\r\n          string[i] = \"b\";\r\n          break;\r\n        case \"|\":\r\n          string[i] = \" \";\r\n          break;\r\n        case \"-.-.\":\r\n          string[i] = \"c\";\r\n          break;\r\n        case \"-..\":\r\n          string[i] = \"d\";\r\n          break;\r\n        case \".\":\r\n          string[i] = \"e\";\r\n          break;\r\n        case \"..-.\":\r\n          string[i] = \"f\";\r\n          break;\r\n        case \"--.\":\r\n          string[i] = \"g\";\r\n          break;\r\n        case \"....\":\r\n          string[i] = \"h\";\r\n          break;\r\n        case \"..\":\r\n          string[i] = \"i\";\r\n          break;\r\n        case \".---\":\r\n          string[i] = \"j\";\r\n          break;\r\n        case \"-.-\":\r\n          string[i] = \"k\";\r\n          break;\r\n        case \".-..\":\r\n          string[i] = \"l\";\r\n          break;\r\n        case \"--\":\r\n          string[i] = \"m\";\r\n          break;\r\n        case \"-.\":\r\n          string[i] = \"n\";\r\n          break;\r\n        case \"---\":\r\n          string[i] = \"o\";\r\n          break;\r\n        case \".--.\":\r\n          string[i] = \"p\";\r\n          break;\r\n        case \"--.-\":\r\n          string[i] = \"q\";\r\n          break;\r\n        case \".-.\":\r\n          string[i] = \"r\";\r\n          break;\r\n        case \"...\":\r\n          string[i] = \"s\";\r\n          break;\r\n        case \"-\":\r\n          string[i] = \"t\";\r\n          break;\r\n        case \"..-\":\r\n          string[i] = \"u\";\r\n          break;\r\n        case \"...-\":\r\n          string[i] = \"v\";\r\n          break;\r\n        case \".--\":\r\n          string[i] = \"w\";\r\n          break;\r\n        case \"-..-\":\r\n          string[i] = \"x\";\r\n          break;\r\n        case \"-.--\":\r\n          string[i] = \"y\";\r\n          break;\r\n        case \"--..\":\r\n          string[i] = \"z\";\r\n          break;\r\n        case \".----\":\r\n          string[i] = \"1\";\r\n          break;\r\n        case \"..---\":\r\n          string[i] = \"2\";\r\n          break;\r\n        case \"...--\":\r\n          string[i] = \"3\";\r\n          break;\r\n        case \"....-\":\r\n          string[i] = \"4\";\r\n          break;\r\n        case \".....\":\r\n          string[i] = \"5\";\r\n          break;\r\n        case \"-....\":\r\n          string[i] = \"6\";\r\n          break;\r\n        case \"--...\":\r\n          string[i] = \"7\";\r\n          break;\r\n        case \"---..\":\r\n          string[i] = \"8\";\r\n          break;\r\n        case \"----.\":\r\n          string[i] = \"9\";\r\n          break;\r\n        case \"-----\":\r\n          string[i] = \"0\";\r\n          break;\r\n      }\r\n    }\r\n    string = string.join(\"\");\r\n    this.setState({\r\n      msg: string,\r\n    });\r\n  }\r\n  code(str) {\r\n    str = str.toLowerCase();\r\n    let string = str.split(\"\");\r\n    for (let i = 0; i < string.length; i++) {\r\n      switch (string[i]) {\r\n        case \"a\":\r\n          string[i] = \".-\";\r\n          break;\r\n        case \"b\":\r\n          string[i] = \"-...\";\r\n          break;\r\n        case \" \":\r\n          string[i] = \"|\"; // spacja nie działa nie znaju pomeczu , ja nie podumal\r\n          break;\r\n        case \"c\":\r\n          string[i] = \"-.-.\";\r\n          break;\r\n        case \"d\":\r\n          string[i] = \"-..\";\r\n          break;\r\n        case \"e\":\r\n          string[i] = \".\";\r\n          break;\r\n        case \"f\":\r\n          string[i] = \"..-.\";\r\n          break;\r\n        case \"g\":\r\n          string[i] = \"--.\";\r\n          break;\r\n        case \"h\":\r\n          string[i] = \"....\";\r\n          break;\r\n        case \"i\":\r\n          string[i] = \"..\";\r\n          break;\r\n        case \"j\":\r\n          string[i] = \".---\";\r\n          break;\r\n        case \"k\":\r\n          string[i] = \"-.-\";\r\n          break;\r\n        case \"l\":\r\n          string[i] = \".-..\";\r\n          break;\r\n        case \"m\":\r\n          string[i] = \"--\";\r\n          break;\r\n        case \"n\":\r\n          string[i] = \"-.\";\r\n          break;\r\n        case \"o\":\r\n          string[i] = \"---\";\r\n          break;\r\n        case \"p\":\r\n          string[i] = \".--.\";\r\n          break;\r\n        case \"q\":\r\n          string[i] = \"--.-\";\r\n          break;\r\n        case \"r\":\r\n          string[i] = \".-.\";\r\n          break;\r\n        case \"s\":\r\n          string[i] = \"...\";\r\n          break;\r\n        case \"t\":\r\n          string[i] = \"-\";\r\n          break;\r\n        case \"u\":\r\n          string[i] = \"..-\";\r\n          break;\r\n        case \"v\":\r\n          string[i] = \"...-\";\r\n          break;\r\n        case \"w\":\r\n          string[i] = \".--\";\r\n          break;\r\n        case \"x\":\r\n          string[i] = \"-..-\";\r\n          break;\r\n        case \"y\":\r\n          string[i] = \"-.--\";\r\n          break;\r\n        case \"z\":\r\n          string[i] = \"--..\";\r\n          break;\r\n        case \"1\":\r\n          string[i] = \".----\";\r\n          break;\r\n        case \"2\":\r\n          string[i] = \"..---\";\r\n          break;\r\n        case \"3\":\r\n          string[i] = \"...--\";\r\n          break;\r\n        case \"4\":\r\n          string[i] = \"....-\";\r\n          break;\r\n        case \"5\":\r\n          string[i] = \".....\";\r\n          break;\r\n        case \"6\":\r\n          string[i] = \"-....\";\r\n          break;\r\n        case \"7\":\r\n          string[i] = \"--...\";\r\n          break;\r\n        case \"8\":\r\n          string[i] = \"---..\";\r\n          break;\r\n        case \"9\":\r\n          string[i] = \"----.\";\r\n          break;\r\n        case \"0\":\r\n          string[i] = \"-----\";\r\n          break;\r\n      }\r\n    }\r\n    string = string.join(\" \");\r\n    this.setState({\r\n      msg: string,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Alfabet Morsa:</h1>\r\n        <p>\r\n          To jeden z najpopularniejszych sposobów kodowania wiadomości za pomocą\r\n          kresek i kropek. Każdej literze odpowiada konkretny ciąg kresek i\r\n          kropek właśnie.\r\n        </p>\r\n        <label>\r\n          Tutaj wpisz wiadomość :<br></br>\r\n          <textarea\r\n            className=\"label\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          ></textarea>\r\n        </label>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.decode(this.state.value);\r\n          }}\r\n        >\r\n          Odszyfruj wiadomość\r\n        </button>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.code(this.state.value);\r\n          }}\r\n        >\r\n          Zaszyfruj wiadomość\r\n        </button>\r\n        <div className=\"solution\">\r\n          {this.state.msg ? `Rozwiązanie :` : null}\r\n          <br />\r\n          {this.state.msg ? this.state.msg : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Morse;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nclass Ul extends Component {\r\n  state = {\r\n    value: \"\",\r\n    number: null,\r\n    msg: null,\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  codeFraction = (str) => {\r\n    const arr1 = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n    const arr2 = [\"f\", \"g\", \"h\", \"i\", \"j\"];\r\n    const arr3 = [\"k\", \"l\", \"m\", \"n\", \"o\"];\r\n    const arr4 = [\"p\", \"r\", \"s\", \"t\", \"u\"];\r\n    const arr5 = [\"v\", \"w\", \"x\", \"y\", \"z\"];\r\n    const allarr = [arr1, arr2, arr3, arr4, arr5];\r\n    let string = str.split(\"\");\r\n\r\n    for (let i = 0; i < allarr.length; i++) {\r\n      for (let j = 0; j < allarr[i].length; j++) {\r\n        for (let k = 0; k < string.length; k++) {\r\n          if (string[k] === allarr[i][j]) {\r\n            string[k] = j + 1 + \"/\" + (i + 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    string = string.join(\"\");\r\n    this.setState({\r\n      msg: string,\r\n    });\r\n  };\r\n  decodeFraction = (str) => {\r\n    if (str.includes(\"/\")) {\r\n      // sprawadzanie czy szyfr ma odpowiednie znaki\r\n      let string = str.split(\"\");\r\n      string = string.join(\"\");\r\n      string = string.split(\"\");\r\n      const arr1 = [\"a\", \"b\", \"c\", \"d\", \"e\"];\r\n      const arr2 = [\"f\", \"g\", \"h\", \"i\", \"j\"];\r\n      const arr3 = [\"k\", \"l\", \"m\", \"n\", \"o\"];\r\n      const arr4 = [\"p\", \"r\", \"s\", \"t\", \"u\"];\r\n      const arr5 = [\"v\", \"w\", \"x\", \"y\", \"z\"];\r\n      const allarr = [arr1, arr2, arr3, arr4, arr5];\r\n      let result = [];\r\n      let i = 0;\r\n      while (i < string.length) {\r\n        result.push(allarr[string[i + 2] - 1][string[i] - 1]);\r\n        i += 3;\r\n      }\r\n\r\n      result = result.join(\"\");\r\n      return result;\r\n    } else {\r\n      return alert(\"Nieprawidlowy szyfr! Nie użyłeś ułamka\");\r\n    }\r\n  };\r\n  decodeFractionBtn = (str) => {\r\n    let array = str.split(\" \");\r\n    let result = [];\r\n    let d;\r\n    for (let i = 0; i < array.length; i++) {\r\n      d = this.decodeFraction(array[i]);\r\n      result[i] = d;\r\n    }\r\n    result = result.join(\" \");\r\n    this.setState({\r\n      msg: result,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Szyfr Ulamkowy :</h1>\r\n        <p>\r\n          Każdy znak szyfru zapisuje się za pomocą ułamka zwykłego. Litery\r\n          oddzielmy za pomocą dowolnego operatora matematycznego(Szyfry mogą się\r\n          różnić ze względu na podział alfabetu).\r\n        </p>\r\n        <label>\r\n          Tutaj wpisz wiadomość :<br></br>\r\n          <textarea\r\n            className=\"label\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          ></textarea>\r\n        </label>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.codeFraction(this.state.value);\r\n          }}\r\n        >\r\n          Zakoduj wiadomość !\r\n        </button>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.decodeFractionBtn(this.state.value);\r\n          }}\r\n        >\r\n          Dekoduj wiadomość !\r\n        </button>\r\n        <div className=\"solution\">\r\n          {this.state.msg ? `Rozwiązanie :` : null}\r\n          <br />\r\n          {this.state.msg ? this.state.msg : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ul;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nconst alfabet = [\r\n  \"a\",\r\n  \"b\",\r\n  \"c\",\r\n  \"d\",\r\n  \"e\",\r\n  \"f\",\r\n  \"g\",\r\n  \"h\",\r\n  \"i\",\r\n  \"j\",\r\n  \"k\",\r\n  \"l\",\r\n  \"m\",\r\n  \"n\",\r\n  \"o\",\r\n  \"p\",\r\n  \"q\",\r\n  \"r\",\r\n  \"s\",\r\n  \"t\",\r\n  \"u\",\r\n  \"v\",\r\n  \"w\",\r\n  \"x\",\r\n  \"y\",\r\n  \"z\",\r\n];\r\nclass App extends Component {\r\n  state = {\r\n    value: \"\",\r\n    number: null,\r\n    msg: null,\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  handleNumberChange = (e) => {\r\n    this.setState({\r\n      number: e.target.value,\r\n    });\r\n  };\r\n\r\n  codeCesar = (x) => {\r\n    let number = this.state.number;\r\n    number = number * x;\r\n    if (number > 13 || number < -13) {\r\n      return alert(\"zły zakres kodowania\");\r\n    } else if (typeof number === \"string\") {\r\n      return alert(\"przesuniecie musi byc liczbą !\");\r\n    } else if (this.state.number === null) {\r\n      return alert(\"nie podales szyfru !\");\r\n    }\r\n    let string = this.state.value.split(\"\");\r\n    let arr = [];\r\n    for (let i = 0; i < string.length; i++) {\r\n      let x;\r\n      x = alfabet.indexOf(string[i]);\r\n      x = x + number;\r\n      if (x > 25) {\r\n        x = x - 26;\r\n      } else if (x < 0) {\r\n        x = x + 26;\r\n      }\r\n      if (alfabet.indexOf(string[i]) === -1) {\r\n        arr.push(\" \");\r\n      } else {\r\n        arr.push(x);\r\n        string[i] = alfabet[arr[i]];\r\n      }\r\n    }\r\n    string = string.join(\"\");\r\n    this.setState({\r\n      msg: string,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Na czym polega szyfr cezara zwany też szyfrem przesuwającym?</h1>\r\n        <p>\r\n          W szyfrach tego typu litera tekstu jawnego (niezaszyfrowanego)\r\n          zastępowana jest inną, oddaloną od niej o stałą liczbę pozycji w\r\n          alfabecie.\r\n        </p>\r\n        <br />\r\n        <label>\r\n          Tutaj wpisz wiadomość :\r\n          <br />\r\n          <textarea\r\n            className=\"label\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          ></textarea>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Tutaj wybierz \"przesunięcie\" pomiedzy -13 a 13 :<br></br>\r\n          <input\r\n            type=\"number\"\r\n            onChange={this.handleNumberChange}\r\n            className=\"label\"\r\n          />\r\n        </label>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.codeCesar(1);\r\n          }}\r\n        >\r\n          Zakoduj wiadomość !\r\n        </button>\r\n        <br />\r\n        <button\r\n          onClick={() => {\r\n            this.codeCesar(-1);\r\n          }}\r\n        >\r\n          Dekoduj wiadomość !\r\n        </button>\r\n        <div className=\"solution\">\r\n          {this.state.msg ? `Rozwiązanie :` : null}\r\n          <br />\r\n          {this.state.msg ? this.state.msg : null}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nconst Start = () => {\r\n  return (\r\n    <>\r\n      <h1>No śmiało ! wybierz coś wreszcie !</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Ge from \"./Ge\";\nimport Morse from \"./Morse\";\nimport Ul from \"./Ul\";\nimport Cezar from \"./Cezar\";\nimport Start from \"./Start\";\n\nclass App extends Component {\n  state = {\n    value: \"\",\n  };\n  handleOptionChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n  selectValue = () => {\n    if (this.state.value === \"0\") {\n      return <Start></Start>;\n    } else if (this.state.value === \"1\") {\n      return <Cezar></Cezar>;\n    } else if (this.state.value === \"2\") {\n      return <Morse></Morse>;\n    } else if (this.state.value === \"3\") {\n      return <Ge></Ge>;\n    } else if (this.state.value === \"4\") {\n      return <Ul></Ul>;\n    } else {\n      return <Start></Start>;\n    }\n  };\n  render() {\n    return (\n      <>\n        <h2>Witaj w Aplikacji szyfrującej!</h2>\n        <label>\n          <select\n            name=\"\"\n            id=\"\"\n            onChange={this.handleOptionChange}\n            className=\"select\"\n          >\n            <option value=\"0\">Wybierz szyfr</option>\n            <option value=\"1\">Szyfr Cezara</option>\n            <option value=\"2\">Alfabet Morse'a</option>\n            <option value=\"3\">GA-DE-RY-PO-LU-KI</option>\n            <option value=\"4\">Szyfr Ułamkowy</option>\n          </select>\n        </label>\n        {this.selectValue()}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}